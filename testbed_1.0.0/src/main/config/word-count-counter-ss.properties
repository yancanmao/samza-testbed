# Application / Job
app.class=samzatask.wc.WordCountCounterApp
job.factory.class=org.apache.samza.job.yarn.ScalableYarnJobFactory
job.name=word-count-counter
job.id=1
job.default.system=kafka
job.container.single.thread.mode=true
#job.container.thread.pool.size=0
job.container.count=20
job.debounce.time.ms=5000

task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka

# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz
#yarn.package.path=hdfs://localhost:9000/testbed/${project.artifactId}-${pom.version}-dist.tar.gz
yarn.resourcemanager.address=localhost:8032
yarn.container.memory.mb=4096
yarn.am.container.memory.mb=8192

## Serializers
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory
# registry a serde for orderpool
serializers.registry.wordGroup.class=samzatask.wc.WordGroupSerdeFactory


systems.kafka.consumer.zookeeper.connect=localhost:2181
systems.kafka.producer.bootstrap.servers=localhost:9092
job.coordinator.zk.connect=localhost:2181

## debugger
#task.opts=-agentlib:jdwp=transport=dt_socket,address=localhost:9009,server=y,suspend=y
##
# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory
metrics.reporter.snapshot.interval=5


job.controller.factory=org.apache.samza.controller.streamswitch.LatencyGuarantorFactory

streamswitch.system.metrics_interval=1000
streamswitch.system.migration_interval=10000
streamswitch.system.warmup_time=40000
streamswitch.system.max_executors=50
streamswitch.system.metrics_retriever.factory=org.apache.samza.controller.streamswitch.JMXMetricsRetrieverFactory
streamswitch.requirement.window=1000
streamswitch.requirement.latency=1000
streamswitch.system.l_low=100
streamswitch.system.l_high=100
streamswitch.system.conservative=0.8
streamswitch.system.initialservicerate=20

task.name.grouper.factory=org.apache.samza.container.grouper.task.GroupByContainerIdsFactory

systems.kafka.samza.fetch.threshold=2560000

job.coordinator.factory=org.apache.samza.zk.FollowerJobCoordinatorFactory
task.execute=bin/run-processor.sh

yarn.web.address=localhost:8088
topic.number=1
topic.1.name=words

stores.word-count-groups.factory=org.apache.samza.storage.kv.inmemory.InMemoryKeyValueStorageEngineFactory
#stores.word-counts.factory=org.apache.samza.storage.kv.RocksDbKeyValueStorageEngineFactory
stores.word-count-groups.changelog=kafka.word-count-groups-changelog
stores.word-count-groups.key.serde=string
stores.word-count-groups.msg.serde=wordGroup
#systems.kafka.consumer.zookeeper.connect=alligator:2181
#systems.kafka.producer.bootstrap.servers=alligator:9092,buffalo:9092
#job.coordinator.zk.connect=alligator:2181

## Application / Job
#app.class=samzatask.stock.StockExchangeApp
#job.name=stock-exchange
#job.changelog.system=kafka
##task.name.grouper.factory=org.apache.samza.container.grouper.task.SingleContainerGrouperFactory
#processor.id=0
##systems.kafka.default.stream.samza.offset.default=oldest
#job.coordinator.zk.connect=localhost:2181
#job.default.system=kafka
